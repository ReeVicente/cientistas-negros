/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as PhilipEmeagwaliImport } from './routes/philip-emeagwali'
import { Route as NeilDegrasseTyssonImport } from './routes/neil-degrasse-tysson'
import { Route as MaeJemisonImport } from './routes/mae-jemison'
import { Route as KatherineJohnsonImport } from './routes/katherine-johnson'
import { Route as CharlesDrewImport } from './routes/charles-drew'
import { Route as BenjaminBannekerImport } from './routes/benjamin-banneker'
import { Route as AliceBallImport } from './routes/alice-ball'
import { Route as IndexImport } from './routes/index'

// Create/Update Routes

const PhilipEmeagwaliRoute = PhilipEmeagwaliImport.update({
  id: '/philip-emeagwali',
  path: '/philip-emeagwali',
  getParentRoute: () => rootRoute,
} as any)

const NeilDegrasseTyssonRoute = NeilDegrasseTyssonImport.update({
  id: '/neil-degrasse-tysson',
  path: '/neil-degrasse-tysson',
  getParentRoute: () => rootRoute,
} as any)

const MaeJemisonRoute = MaeJemisonImport.update({
  id: '/mae-jemison',
  path: '/mae-jemison',
  getParentRoute: () => rootRoute,
} as any)

const KatherineJohnsonRoute = KatherineJohnsonImport.update({
  id: '/katherine-johnson',
  path: '/katherine-johnson',
  getParentRoute: () => rootRoute,
} as any)

const CharlesDrewRoute = CharlesDrewImport.update({
  id: '/charles-drew',
  path: '/charles-drew',
  getParentRoute: () => rootRoute,
} as any)

const BenjaminBannekerRoute = BenjaminBannekerImport.update({
  id: '/benjamin-banneker',
  path: '/benjamin-banneker',
  getParentRoute: () => rootRoute,
} as any)

const AliceBallRoute = AliceBallImport.update({
  id: '/alice-ball',
  path: '/alice-ball',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/alice-ball': {
      id: '/alice-ball'
      path: '/alice-ball'
      fullPath: '/alice-ball'
      preLoaderRoute: typeof AliceBallImport
      parentRoute: typeof rootRoute
    }
    '/benjamin-banneker': {
      id: '/benjamin-banneker'
      path: '/benjamin-banneker'
      fullPath: '/benjamin-banneker'
      preLoaderRoute: typeof BenjaminBannekerImport
      parentRoute: typeof rootRoute
    }
    '/charles-drew': {
      id: '/charles-drew'
      path: '/charles-drew'
      fullPath: '/charles-drew'
      preLoaderRoute: typeof CharlesDrewImport
      parentRoute: typeof rootRoute
    }
    '/katherine-johnson': {
      id: '/katherine-johnson'
      path: '/katherine-johnson'
      fullPath: '/katherine-johnson'
      preLoaderRoute: typeof KatherineJohnsonImport
      parentRoute: typeof rootRoute
    }
    '/mae-jemison': {
      id: '/mae-jemison'
      path: '/mae-jemison'
      fullPath: '/mae-jemison'
      preLoaderRoute: typeof MaeJemisonImport
      parentRoute: typeof rootRoute
    }
    '/neil-degrasse-tysson': {
      id: '/neil-degrasse-tysson'
      path: '/neil-degrasse-tysson'
      fullPath: '/neil-degrasse-tysson'
      preLoaderRoute: typeof NeilDegrasseTyssonImport
      parentRoute: typeof rootRoute
    }
    '/philip-emeagwali': {
      id: '/philip-emeagwali'
      path: '/philip-emeagwali'
      fullPath: '/philip-emeagwali'
      preLoaderRoute: typeof PhilipEmeagwaliImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/alice-ball': typeof AliceBallRoute
  '/benjamin-banneker': typeof BenjaminBannekerRoute
  '/charles-drew': typeof CharlesDrewRoute
  '/katherine-johnson': typeof KatherineJohnsonRoute
  '/mae-jemison': typeof MaeJemisonRoute
  '/neil-degrasse-tysson': typeof NeilDegrasseTyssonRoute
  '/philip-emeagwali': typeof PhilipEmeagwaliRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/alice-ball': typeof AliceBallRoute
  '/benjamin-banneker': typeof BenjaminBannekerRoute
  '/charles-drew': typeof CharlesDrewRoute
  '/katherine-johnson': typeof KatherineJohnsonRoute
  '/mae-jemison': typeof MaeJemisonRoute
  '/neil-degrasse-tysson': typeof NeilDegrasseTyssonRoute
  '/philip-emeagwali': typeof PhilipEmeagwaliRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/alice-ball': typeof AliceBallRoute
  '/benjamin-banneker': typeof BenjaminBannekerRoute
  '/charles-drew': typeof CharlesDrewRoute
  '/katherine-johnson': typeof KatherineJohnsonRoute
  '/mae-jemison': typeof MaeJemisonRoute
  '/neil-degrasse-tysson': typeof NeilDegrasseTyssonRoute
  '/philip-emeagwali': typeof PhilipEmeagwaliRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/alice-ball'
    | '/benjamin-banneker'
    | '/charles-drew'
    | '/katherine-johnson'
    | '/mae-jemison'
    | '/neil-degrasse-tysson'
    | '/philip-emeagwali'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/alice-ball'
    | '/benjamin-banneker'
    | '/charles-drew'
    | '/katherine-johnson'
    | '/mae-jemison'
    | '/neil-degrasse-tysson'
    | '/philip-emeagwali'
  id:
    | '__root__'
    | '/'
    | '/alice-ball'
    | '/benjamin-banneker'
    | '/charles-drew'
    | '/katherine-johnson'
    | '/mae-jemison'
    | '/neil-degrasse-tysson'
    | '/philip-emeagwali'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AliceBallRoute: typeof AliceBallRoute
  BenjaminBannekerRoute: typeof BenjaminBannekerRoute
  CharlesDrewRoute: typeof CharlesDrewRoute
  KatherineJohnsonRoute: typeof KatherineJohnsonRoute
  MaeJemisonRoute: typeof MaeJemisonRoute
  NeilDegrasseTyssonRoute: typeof NeilDegrasseTyssonRoute
  PhilipEmeagwaliRoute: typeof PhilipEmeagwaliRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AliceBallRoute: AliceBallRoute,
  BenjaminBannekerRoute: BenjaminBannekerRoute,
  CharlesDrewRoute: CharlesDrewRoute,
  KatherineJohnsonRoute: KatherineJohnsonRoute,
  MaeJemisonRoute: MaeJemisonRoute,
  NeilDegrasseTyssonRoute: NeilDegrasseTyssonRoute,
  PhilipEmeagwaliRoute: PhilipEmeagwaliRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/alice-ball",
        "/benjamin-banneker",
        "/charles-drew",
        "/katherine-johnson",
        "/mae-jemison",
        "/neil-degrasse-tysson",
        "/philip-emeagwali"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/alice-ball": {
      "filePath": "alice-ball.tsx"
    },
    "/benjamin-banneker": {
      "filePath": "benjamin-banneker.tsx"
    },
    "/charles-drew": {
      "filePath": "charles-drew.tsx"
    },
    "/katherine-johnson": {
      "filePath": "katherine-johnson.tsx"
    },
    "/mae-jemison": {
      "filePath": "mae-jemison.tsx"
    },
    "/neil-degrasse-tysson": {
      "filePath": "neil-degrasse-tysson.tsx"
    },
    "/philip-emeagwali": {
      "filePath": "philip-emeagwali.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
